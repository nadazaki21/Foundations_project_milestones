{"ast":null,"code":"var _jsxFileName = \"/home/nada-zaki/portfolio-project/Foundations_project_milestones/front-end/src/components/CreationForms/SubtaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './FormStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubtaskForm = ({\n  phases,\n  setPhases,\n  prevStep,\n  handleSubmit\n}) => {\n  _s();\n  var _phases$find;\n  const [subtaskName, setSubtaskName] = useState('');\n  const [selectedPhase, setSelectedPhase] = useState('');\n  const [selectedTask, setSelectedTask] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (phases.length > 0) {\n      setSelectedPhase(phases[0].name);\n    }\n  }, [phases]);\n  useEffect(() => {\n    const phase = phases.find(p => p.name === selectedPhase);\n    if (phase && phase.tasks.length > 0) {\n      setSelectedTask(phase.tasks[0].name);\n    } else {\n      setSelectedTask('');\n    }\n  }, [selectedPhase, phases]);\n  const handleAddSubtask = () => {\n    if (subtaskName.trim() === '') {\n      setError('Subtask name cannot be empty');\n      return;\n    }\n    const updatedPhases = phases.map(phase => {\n      if (phase.name === selectedPhase) {\n        return {\n          ...phase,\n          tasks: phase.tasks.map(task => {\n            if (task.name === selectedTask) {\n              return {\n                ...task,\n                subtasks: [...task.subtasks, subtaskName]\n              };\n            }\n            return task;\n          })\n        };\n      }\n      return phase;\n    });\n    setPhases(updatedPhases);\n    setSubtaskName('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Subtask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Subtask Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: subtaskName,\n        onChange: e => setSubtaskName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Phase:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedPhase,\n        onChange: e => setSelectedPhase(e.target.value),\n        children: phases.map((phase, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: phase.name,\n          children: phase.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Task:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTask,\n        onChange: e => setSelectedTask(e.target.value),\n        disabled: !selectedPhase,\n        children: (_phases$find = phases.find(phase => phase.name === selectedPhase)) === null || _phases$find === void 0 ? void 0 : _phases$find.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: task.name,\n          children: task.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"form-button\",\n      onClick: handleAddSubtask,\n      children: \"Add Subtask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"form-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"form-button\",\n      onClick: prevStep,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Phases, Tasks, and Subtasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), phases.map((phase, phaseIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [phase.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: phase.tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [task.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: task.subtasks.map((subtask, subtaskIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: subtask\n              }, subtaskIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, taskIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, phaseIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SubtaskForm, \"Shdzywvqzq9cgcot9PxPBUgngwM=\");\n_c = SubtaskForm;\nexport default SubtaskForm;\nvar _c;\n$RefreshReg$(_c, \"SubtaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SubtaskForm","phases","setPhases","prevStep","handleSubmit","_s","_phases$find","subtaskName","setSubtaskName","selectedPhase","setSelectedPhase","selectedTask","setSelectedTask","error","setError","length","name","phase","find","p","tasks","handleAddSubtask","trim","updatedPhases","map","task","subtasks","className","onSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","index","disabled","onClick","phaseIndex","taskIndex","subtask","subtaskIndex","_c","$RefreshReg$"],"sources":["/home/nada-zaki/portfolio-project/Foundations_project_milestones/front-end/src/components/CreationForms/SubtaskForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './FormStyles.css';\n\nconst SubtaskForm = ({ phases, setPhases, prevStep, handleSubmit }) => {\n  const [subtaskName, setSubtaskName] = useState('');\n  const [selectedPhase, setSelectedPhase] = useState('');\n  const [selectedTask, setSelectedTask] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (phases.length > 0) {\n      setSelectedPhase(phases[0].name);\n    }\n  }, [phases]);\n\n  useEffect(() => {\n    const phase = phases.find(p => p.name === selectedPhase);\n    if (phase && phase.tasks.length > 0) {\n      setSelectedTask(phase.tasks[0].name);\n    } else {\n      setSelectedTask('');\n    }\n  }, [selectedPhase, phases]);\n\n  const handleAddSubtask = () => {\n    if (subtaskName.trim() === '') {\n      setError('Subtask name cannot be empty');\n      return;\n    }\n\n    const updatedPhases = phases.map(phase => {\n      if (phase.name === selectedPhase) {\n        return {\n          ...phase,\n          tasks: phase.tasks.map(task => {\n            if (task.name === selectedTask) {\n              return { ...task, subtasks: [...task.subtasks, subtaskName] };\n            }\n            return task;\n          })\n        };\n      }\n      return phase;\n    });\n\n    setPhases(updatedPhases);\n    setSubtaskName('');\n    setError('');\n  };\n\n  return (\n    <form className=\"form\" onSubmit={(e) => {\n      e.preventDefault();\n      handleSubmit();\n    }}>\n      <h2>Create Subtask</h2>\n      <label>\n        Subtask Name:\n        <input\n          type=\"text\"\n          value={subtaskName}\n          onChange={(e) => setSubtaskName(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Select Phase:\n        <select\n          value={selectedPhase}\n          onChange={(e) => setSelectedPhase(e.target.value)}\n        >\n          {phases.map((phase, index) => (\n            <option key={index} value={phase.name}>\n              {phase.name}\n            </option>\n          ))}\n        </select>\n      </label>\n      <label>\n        Select Task:\n        <select\n          value={selectedTask}\n          onChange={(e) => setSelectedTask(e.target.value)}\n          disabled={!selectedPhase}\n        >\n          {phases\n            .find(phase => phase.name === selectedPhase)\n            ?.tasks.map((task, index) => (\n              <option key={index} value={task.name}>\n                {task.name}\n              </option>\n            ))}\n        </select>\n      </label>\n      {error && <p className=\"error-message\">{error}</p>}\n      <button\n        type=\"button\"\n        className=\"form-button\"\n        onClick={handleAddSubtask}\n      >\n        Add Subtask\n      </button>\n      <button type=\"submit\" className=\"form-button\" onClick={handleSubmit}>\n        Submit\n      </button>\n      <button type=\"button\" className=\"form-button\" onClick={prevStep}>\n        Back\n      </button>\n      <ul>\n      <h3>Phases, Tasks, and Subtasks:</h3>\n        {phases.map((phase, phaseIndex) => (\n          <li key={phaseIndex}>\n            {phase.name}\n            <ul>\n              {phase.tasks.map((task, taskIndex) => (\n                <li key={taskIndex}>\n                  {task.name}\n                  <ul>\n                    {task.subtasks.map((subtask, subtaskIndex) => (\n                      <li key={subtaskIndex}>{subtask}</li>\n                    ))}\n                  </ul>\n                </li>\n              ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </form>\n  );\n};\n\nexport default SubtaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}