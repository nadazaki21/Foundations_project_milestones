{"ast":null,"code":"var _jsxFileName = \"/home/nada-zaki/portfolio-project/Foundations_project_milestones/front-end/src/components/CreationForms/PhaseForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FormStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhaseForm = ({\n  phases,\n  setPhases,\n  nextStep,\n  prevStep\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [error, setError] = useState('');\n  const handleAddPhase = () => {\n    if (name.trim() === '' || startDate.trim() === '' || endDate.trim() === '') {\n      setError('All fields are required');\n      return;\n    }\n    const newPhase = {\n      name: name,\n      start_date: new Date(startDate).toISOString(),\n      // Ensure date format is compatible with backend\n      end_date: new Date(endDate).toISOString(),\n      // Ensure date format is compatible with backend\n      tasks: []\n    };\n\n    // Normally, you would send the new phase data to the backend here\n    // For this example, we'll just update the local state\n    setPhases([...phases, newPhase]);\n\n    // Reset form fields\n    setName('');\n    setStartDate('');\n    setEndDate('');\n    setError('');\n  };\n  const handleNextStep = () => {\n    if (phases.length === 0) {\n      setError('You must add at least one phase');\n      return;\n    }\n    nextStep();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Phase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Phase Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"form-button\",\n      onClick: handleAddPhase,\n      children: \"Add Phase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"form-button\",\n      onClick: handleNextStep,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"form-button\",\n      onClick: prevStep,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), phases.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phases-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Phases:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: phases.map((phase, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: phase.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), \"Start Date: \", new Date(phase.start_date).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), \"End Date: \", new Date(phase.end_date).toLocaleDateString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PhaseForm, \"wDIjUXFq48hMhTl6ORdxv/yPK4Y=\");\n_c = PhaseForm;\nexport default PhaseForm;\nvar _c;\n$RefreshReg$(_c, \"PhaseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhaseForm","phases","setPhases","nextStep","prevStep","_s","name","setName","startDate","setStartDate","endDate","setEndDate","error","setError","handleAddPhase","trim","newPhase","start_date","Date","toISOString","end_date","tasks","handleNextStep","length","className","onSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","onClick","map","phase","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["/home/nada-zaki/portfolio-project/Foundations_project_milestones/front-end/src/components/CreationForms/PhaseForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './FormStyles.css';\n\nconst PhaseForm = ({ phases, setPhases, nextStep, prevStep }) => {\n  const [name, setName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [error, setError] = useState('');\n\n  const handleAddPhase = () => {\n    if (name.trim() === '' || startDate.trim() === '' || endDate.trim() === '') {\n      setError('All fields are required');\n      return;\n    }\n\n    const newPhase = {\n      name: name,\n      start_date: new Date(startDate).toISOString(), // Ensure date format is compatible with backend\n      end_date: new Date(endDate).toISOString(), // Ensure date format is compatible with backend\n      tasks: []\n    };\n\n    // Normally, you would send the new phase data to the backend here\n    // For this example, we'll just update the local state\n    setPhases([...phases, newPhase]);\n\n    // Reset form fields\n    setName('');\n    setStartDate('');\n    setEndDate('');\n    setError('');\n  };\n\n  const handleNextStep = () => {\n    if (phases.length === 0) {\n      setError('You must add at least one phase');\n      return;\n    }\n    nextStep();\n  };\n\n  return (\n    <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n      <h2>Create Phase</h2>\n      <label>\n        Phase Name:\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\n      </label>\n      <label>\n        Start Date:\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} required />\n      </label>\n      <label>\n        End Date:\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} required />\n      </label>\n      {error && <p className=\"error-message\">{error}</p>}\n      <button type=\"button\" className=\"form-button\" onClick={handleAddPhase}>Add Phase</button>\n      <button type=\"button\" className=\"form-button\" onClick={handleNextStep}>Next</button>\n      <button type=\"button\" className=\"form-button\" onClick={prevStep}>Back</button>\n      {phases.length > 0 && (\n        <div className=\"phases-list\">\n          <h3>Phases:</h3>\n          <ul>\n            {phases.map((phase, index) => (\n              <li key={index}>\n                <strong>{phase.name}</strong>\n                <br />\n                Start Date: {new Date(phase.start_date).toLocaleDateString()}\n                <br />\n                End Date: {new Date(phase.end_date).toLocaleDateString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default PhaseForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}